name: Go Multi-Platform Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gtk+3
          echo "PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig" >> $GITHUB_ENV

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Write-Host "Running on Windows"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Clean previous binaries
        if: matrix.os == 'windows-latest'
        run: |
          Remove-Item -Path "interrupted.exe" -Force -ErrorAction SilentlyContinue

      - name: Build the project
        run: |
          cd src
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            go build -o ../interrupted.exe -ldflags="-H windowsgui -w" main.go resources.go
          else
            go build -o ../interrupted-${{ matrix.os }} .
          fi

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.os }}
          path: |
            ${{ matrix.os == 'windows-latest' && 'interrupted.exe' || format('interrupted-{0}', matrix.os) }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries-ubuntu-latest
          path: ./binaries/ubuntu-latest

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries-macos-latest
          path: ./binaries/macos-latest

      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: binaries-windows-latest
          path: ./binaries/windows-latest

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            ./binaries/ubuntu-latest/interrupted-ubuntu-latest
            ./binaries/macos-latest/interrupted-macos-latest
            ./binaries/windows-latest/interrupted.exe  # Ensure correct file is used
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}